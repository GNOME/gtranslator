//
// (C) 2000 	Fatih Demir <kabalak@gmx.net>
//
// gtranslatord is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//   the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
// gtranslatord is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
//  along with this program; if not, write to the Free Software
//   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//

#ifndef GTRANSLATORD_IDL
#define GTRANSLATORD_IDL 1

module libgtranslator
{
	interface gtranslatord {
	
		//
		// The stringlist for the results.
		//
		typedef sequence<string> ResultStrings;
		
		//
		// The Query results are handled in this enumeration.
		//
		enum QueryResult {
			SUCCESS,
			MULTIPLESUCCESS,
			NORESULT,
			DEADSERVER,
			NOMSGDB
		};
		
		//
		// The exceptions.
		//
		exception gtranslatordNoMsgDb {};
		exception gtranslatordNoServer {};
		exception gtranslatordNoShutDown { string error; };
		
		//
		// Creates a new server.
		//
		long gtranslatorServerNew(in string host) 
			raises(gtranslatordNoServer);
		
		//
		// Shutdown the server.
		//
		// 1 - By the hostname (e.g. "localhost")
		//
		void gtranslatorServerShutDown(in string host)
			raises(gtranslatordNoShutDown);
		
		//	
		// 2 - By the host id (e.g. 23)
		//
		void gtranslatorServerShutDownById(in long hostId)
			raises(gtranslatordNoShutDown);
		//	
		// Returns the hostname of the given hostid.
		//
		string gtranslatorServerGetHost(in long hostId);
		
		//
		// Query the message database for the given "query".
		//
		void gtranslatordQuery(in string query,out string result);
		
		//
		// Query the message server for the given "query"
		//  requiring a "minimumLength" equality.
		//
		void gtranslatordQueryWithLength(in string query,
			in long minimumLength);
			
		//	
		// Establish a connection to the given client.
		//
		void gtranslatordConnect(in string host,in string client);
		
		//
		// Disconnect from the given client.
		//
		void gtranslatordDisConnect(in string host,in string client);
	};
};

#endif
