//
// (C) 2000 Fatih Demir -- kabalak / kabalak@gmx.net
//
// This is distributed under the GNU GPL V 2.0 or higher which can be
//  found in the file COPYING for further studies.
//
// Enjoy this piece of software, brain-crack and other nice things.
//
// WARNING: Trying to decode the source-code may be hazardous for all your
//  future development in direction to better IQ-Test rankings!
//
// PSC: This has been completely written with vim; the best editor of all.
//

#ifndef GTRANSLATORD_IDL
#define GTRANSLATORD_IDL 1

module libgtranslator
{
	interface gtranslatord {
		// the stringlist for the results.
		typedef sequence<string> ResultStrings;
		// enum for query.
		enum QueryResult {
			SUCCESS,
			MULTIPLESUCCESS,
			NORESULT,
			DEADSERVER,
			NOMSGDB
		};
		// exceptions.
		exception gtranslatordNoMsgDb {};
		exception gtranslatordNoServer {};
		exception gtranslatordNoShutDown { string error; };
		// create new server.
		long gtranslatorServerNew(in string host) raises(gtranslatordNoServer);
		// shutdown server. 
		// 1) By hostname (localhost)
		void gtranslatorServerShutDown(in string host) raises(gtranslatordNoShutDown);
		// 2) By host_id (23)
		void gtranslatorServerShutDownById(in long hostId) raises(gtranslatordNoShutDown);
		// gets the hostname for the given host_id
		string gtranslatorserverGetHost(in long hostId);
		// query the message db.
		void gtranslatordQuery(in string query,out string result);
		// query the message db with some args.
		void gtranslatordQueryById(in string query,in long minimumLength);
		// establish a connection with a client
		void gtranslatordConnect(in string host,in string client);
	};
};

#endif
