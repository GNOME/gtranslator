//
// (C) 2000 Fatih Demir -- kabalak / kabalak@gmx.net
//
// This is distributed under the GNU GPL V 2.0 or higher which can be
//  found in the file COPYING for further studies.
//
// Enjoy this piece of software, brain-crack and other nice things.
//
// WARNING: Trying to decode the source-code may be hazardous for all your
//  future development in direction to better IQ-Test rankings!
//
// PSC: This has been completely written with vim; the best editor of all.
//

#ifndef GTRANSLATORD_IDL
#define GTRANSLATORD_IDL 1

module libgtranslator
{
	interface gtranslatord {
		// the stringlist for the results.
		typedef sequence<string> ResultStrings;
		// enum for query.
		enum QueryResult {
			SUCCESS,
			MULTIPLE_SUCCESS,
			NO_RESULT,
			DEAD_SERVER,
			DEAD_MSG_DB
		};
		// exceptions.
		exception gtranslatord_no_msg_db {};
		exception gtranslatord_no_server {};
		exception gtranslatord_no_shutdown { string error; };
		// create new server.
		long gtranslator_server_new(in string host) raises(gtranslatord_no_server);
		// shutdown server. 
		// 1) By hostname (localhost)
		void gtranslator_server_shutdown(in string host) raises(gtranslatord_no_shutdown);
		// 2) By host_id (23)
		void gtranslator_server_shutdown_by_id(in long host_id) raises(gtranslatord_no_shutdown);
		// gets the hostname for the given host_id
		string gtranslator_server_get_host(in long host_id);
		// query the message db.
		void gtranslatord_query(in string query,out string result);
		// query the message db with some args.
		void gtranslatord_query_up_to(in string query,in long minimum_length);
		// establish a connection with a client
		void gtranslatord_connect(in string host,in string client);
	};
};

#endif
